public service Telnet::listen ( termid: in termid,
                                port: in integer ) is
term: instance of NetworkVirtualTerminal;
conn: instance of RemoteConnection;
localaddr: Socket::sockaddr;
begin
  // select the terminal instance
  term := find_one NetworkVirtualTerminal( id = termid );
  if ( null /= term ) then
    // validate the arguments
    if ( port_is_valid( port ) ) then
      // select an existing connection
      if ( null = term->R3.communicates_through.RemoteConnection ) then
        conn := create RemoteConnection( nvt_id => term.id, Current_State => Idle );
        link conn R3.provides_communication_channel_for term;
        localaddr.address := "127.0.0.1";
        localaddr.port := port;
        conn.local_address := localaddr;
        generate RemoteConnection.listen() to conn;
      else
        Logger::error( "Telnet::listen: " & TERMBUSY'image & " Terminal is busy." );
        Print~>error( ( "Terminal is busy.", TERMBUSY ) );
      end if;
    else
      Logger::error( "Telnet::listen: " & PORTINVAL'image & " Invalid port value." );
      Print~>error( ( "Invalid port value.", PORTINVAL ) );
    end if;
  else
    Logger::error( "Telnet::listen: " & TERMINVAL'image & " Terminal does not exist." );
    Print~>error( ( "Terminal does not exist.", TERMINVAL ) );
  end if;
end service;
