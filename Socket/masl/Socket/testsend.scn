private service Socket::testsend () is
sock: socketfd;
peeraddr: sockaddr;
msg: sequence of byte;
retval: integer;
begin

  sock := -1;

  // create a client socket
  sock := socket( SOCK_STREAM, IPPROTO_TCP );
  if ( sock < 0 ) then
    console << "Socket creation error " << geterror() << ": " << strerror() << endl;
    raise SocketException;
  end if;
  
  // connect to server
  peeraddr.address := "127.0.0.1";
  peeraddr.port := 8080;
  retval := connect( sock, peeraddr );
  if ( retval < 0 ) then
    console << "Connect error " << geterror() << ": " << strerror() << endl;
    raise SocketException;
  end if;
  
  // send some data
  msg := 72 & 101 & 108 & 108 & 111 & 44 & 32 & 87 & 111 & 114 & 108 & 100 & 33; // "Hello, World!"
  retval := send( sock, msg, msg'length, 0 );
  if ( retval < 0 ) then
    console << "Send error " << geterror() << ": " << strerror() << endl;
    raise SocketException;
  end if;
  retval := close( integer(sock) );
  
exception when SocketException =>
  retval := close( integer(sock) );

end service;
