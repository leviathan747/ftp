private service Socket::testsend_udp () is
sock: socketfd;
peeraddr: sockaddr;
msg: sequence of byte;
retval: integer;
begin

  sock := -1;

  // create a client socket
  sock := socket( SOCK_DGRAM, IPPROTO_UDP );
  if ( sock < 0 ) then
    console << "Socket creation error " << geterror() << ": " << strerror() << endl;
    raise SocketException;
  end if;
  
  // send some data
  peeraddr.address := "127.0.0.1";
  peeraddr.port := 8080;
  msg := 72 & 101 & 108 & 108 & 111 & 44 & 32 & 87 & 111 & 114 & 108 & 100 & 33 & 32 & 40 & 85 & 68 & 80 & 41; // "Hello, World! (UDP)"
  retval := sendto( sock, msg, msg'length(), 0, peeraddr );
  if ( retval < 0 ) then
    console << "Send error " << geterror() << ": " << strerror() << endl;
    raise SocketException;
  end if;
  retval := close( integer(sock) );
  
exception when SocketException =>
  retval := close( integer(sock) );

end service;
